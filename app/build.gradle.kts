/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.0")

    // This dependency is used by the application.
    implementation("org.springframework:spring-context:6.0.11")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("com.devmind.gradle.MyApplication")
}

tasks.withType<Test> {
    useJUnitPlatform()
}

tasks.create("hello") {
    doLast {
        println("Hello")
    }
}
tasks.create("world") {
    dependsOn("hello")
    doLast {
        println("World")
    }
}

println("This is executed during the configuration phase.")

tasks.create("configured") {
    description = "My own configured task"
    println("This (configured) is also executed during the configuration phase.")
}

tasks.create("testWrite") {
    description = "My own testWrite task"
    doLast {
        println("This (testWrite) is executed during the execution phase.")
    }
}

tasks.create("testWriteBoth") {
    description = "My own testWriteBoth task"
    doFirst {
        println("This (testWriteBoth) is executed first during the execution phase.")
    }
    doLast {
        println("This (testWriteBoth) is executed last during the execution phase.")
    }
    println("This (testWriteBoth) is executed during the configuration phase as well.")
}